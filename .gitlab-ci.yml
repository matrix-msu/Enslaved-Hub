image:
  name: dock.matrix.msu.edu/matrix/triton-job-runner:latest

stages:
  - prepare
  - build_and_deploy

variables:
  ANSIBLE_PYTHON_INTERPRETER: '/opt/local/bin/python3'
  ANSIBLE_HOST_KEY_CHECKING: 'False'

constants_and_visualizations:
  stage: prepare
  trigger:
    project: matrix/enslaved-org-operations/visualize-counts-updater
    strategy: depend
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $WEEKLY_PRODUCTION_DEPLOY == "true"'
      when: always
    - when: manual

deploy-dev:
  stage: build_and_deploy
  needs: 
    - constants_and_visualizations
  when: on_success
  script:
   - apk add php7-tokenizer
   - php -v
   - php -m
   - cd src/source/; composer install --no-dev ; cd ..
   - composer install --no-dev
   - npm install
   - cp config.dist.php config.php
   - sed -i 's#ENVIRONMENTBASEPATH#/builds/matrix/enslaved/src/build_local#' config.php
   - cp source/config.dist.php source/config.php
   - sed -i "s#ENVIRONMENTBASEURL#$CI_ENVIRONMENT_URL#" source/config.php
   - sed -i 's#ENVIRONMENTBASEPATH#/builds/matrix/enslaved/src/build_local/#' source/config.php
   - sed -i "s#SECRETTOKENGOESHERE#$KORA_TOKEN#" source/config.php
   - cp source/.dist.htaccess source/.htaccess
   - cp source/ontology/.htaccess.dist source/ontology/.htaccess
   - cp source/database-config.dist.php source/database-config.php
   - npm run dev ; cd ..
   - cp -r src/build_local/ public/
   - sed -i 's#/builds/matrix/enslaved/src/build_local/#/opt/local/share/httpd/htdocs/#' public/config.php
   - sed -i 's#ENVIRONMENTBASEPATH#/#' public/.htaccess
   - sed -i 's#ENVIRONMENTBASEPATH#/ontology/#' public/ontology/.htaccess
   - json -n -f src/source/visualizeCounts/config.json
   - mkdir -p ~/.ssh || true
   - chmod 700 ~/.ssh
   - eval $(ssh-agent -s)
   - echo "$TRITON_KEY" | tr -d '\r' | ssh-add -
   - echo "Key loaded"
   - function cleanup() { kill $SSH_AGENT_PID;  }
   - trap cleanup EXIT
   - ansible-playbook ansible/deploy-website.yml
  environment:
    name: staging
    url: https://enslaved.dev.matrix.msu.edu/
  variables:
    ANSIBLE_INVENTORY: 'ansible/$CI_ENVIRONMENT_NAME.hosts'
    
deploy-production:
  stage: build_and_deploy
  extends: deploy-dev
  environment:
    name: production
    url: https://enslaved.org/
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $WEEKLY_PRODUCTION_DEPLOY == "true"'
      when: always
    - when: manual
